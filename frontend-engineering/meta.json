[
  {
    "title": "javascript 代码是如何被压缩的",
    "path": "uglify",
    "date": "2020-02-25 22:00",
    "description": "在前端中但凡谈到打包，肯定要提及到 `webpack`，毕竟它现在已经是最为流行的打包工具。但 `webpack` 更多地是表现在 `术` 上，于是我决定写这篇文章，更多地讲解一些关于 `道` 的。\n对于一个前端而言，生产环境的静态资源优化，它既是面试中的高频问题，同时也最容易成为平时工作中的 OKR/KPI。"
  },
  {
    "title": "如何更好地优化打包资源",
    "path": "bundle",
    "date": "2020-02-25 09:00",
    "description": "随着前端的发展，特别是 `React`，`Vue` 等构造单页应用的兴起，前端的能力得以很大提升，随之而来的是项目的复杂度越来越大。此时的前端的静态资源也越来越庞大，而毫无疑问 `javascript` 资源已是前端的主体资源，对于压缩它的体积至为重要。"
  },
  {
    "title": "网站的缓存控制策略最佳实践",
    "path": "http-cache",
    "date": "2020-02-29 14:00",
    "description": "对于一个网站来讲，性能关乎用户体验，你在更短的时间内打开网站，你将会留住更多的用户。如果你的页面十秒才能打开，那再好的用户交互也是徒然。"
  },
  {
    "title": "在生产环境中优化你的 npm i 速度",
    "path": "npm-install",
    "date": "2020-03-03 14:00",
    "description": "对于一个前端应用，或者说是一个 Node 应用，在 CICD pipeline 中，无论是构建，测试，部署，其中必不可少的环节就是依赖安装: npm i"
  },
  {
    "title": "使用 docker 高效部署你的前端应用",
    "path": "docker",
    "date": "2020-03-10 08:38",
    "description": "Docker 变得越来越流行，它可以轻便灵活地隔离环境，进行扩容，运维管理。对于业务开发者而言，随着持续集成的发展，对代码质量及快速迭代的要求也越来越高。"
  },
  {
    "title": "CICD 下前端的多特性分支环境部署",
    "path": "feature-deploy",
    "date": "2020-03-11 08:24",
    "description": "无论大中小企业，多特性分支的前端环境基本上已成为了标配，即每一个功能分支都配有相应的测试环境。今天山月就循序渐进来讲解下多分支环境的实现方式，经济基础决定上层建筑，企业的基础服务建设决定实现方式，这里是基于 Docker 与 CICD 的实现。"
  },
  {
    "title": "前端部署的发展历程",
    "path": "deploy",
    "date": "2020-03-11 08:57",
    "description": "前端一说起刀耕火种，那肯定紧随着前端工程化这一话题。随着 `react`/`vue`/`angular`，`es6+`，`webpack`，`babel`，`typescript` 以及 `node` 的发展，前端已经在逐渐替代过去 `script` 引 `cdn` 开发的方式了，掀起了工程化这一大浪潮。得益于工程化的发展与开源社区的良好生态，前端应用的可用性与效率得到了很大提高。"
  }
]
